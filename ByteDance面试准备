了解到，字节跳动内部开发语言基本为go，而对于一位多年java开发经验的人来说，面试是不是有点子尴尬。就好比两个讲不同语言的人聊天，完全聊不到一块去。
别着急，我们先分析分析套路。对于后端开发程序员，语言仅仅是一个工具，你造火箭，可以使用多种不同的工具，但火箭的原理是不变的，整理的火箭架构是不变的，目标是一致的。
那么他会如何面试呢？
1.计算机基础(操作系统，网络tcp\http)，linux基础，数据结构与算法；
  这个是软件开发必备的基础中的基础，也最能体现一个人的潜力价值；
2.语言基础
  虽然说字节跳动是go语言，存在语言不通，但java还是要考你的，毕竟各个语言其实也是相通的，jvm，多线程等还是要准备的。
3.中间件功底
  对于一个业务系统，肯定需要多个其他的中间件的支持；除了基本api的使用，原理一定要清楚；
  持久化存储mysql，缓存redis，消息rabbitmq或kafka，搜索引擎elasticsearch，等等。
3.系统设计题
  比如设计一个高并发文章阅读量统计服务，设计一个高并发短链接服务，设计一个商品秒杀系统；
  该部分后期可以考虑单独开专题出来讲解，主要针对高并发业务；
  考察面试官的业务抽象能力，思考问题的全面性，以及基础的沉淀深度。
4.项目经验面试
  考察面试者之前所做的项目，能够非常流畅地描述出项目的整体框架，相关细节点。这一块你说了算，如果说碰到不清楚的，可能面试官就会怀疑了；
  针对项目的某个点进行深挖，为什么要这样做？
  项目中的缺陷，如何改进？有什么难点，怎么解决的？最大的挑战在哪里？
  场景题：针对项目的某个点，假设一个场景，该如何设计和改进？？比如经常会问到，在高并发情况下，会出现什么问题，如何改进优化它？
  
以上是整理的面试点，但据之前面试的同学讲，字节跳动还是最注重数据结构与算法，所以本篇主要围绕这个重中之重展开；
# 数据结构部分:
一.数组
线性结构，支持随机读写，增删麻烦
二.链表
线性结构，增删容易，但不支持随机读写
三.栈
后进先出
四.队列
先进先出
五.数tree
二叉树，先序、中序、后序遍历
六.图graph
有向图，无向图，带权图，
最小生成树，最短路径

# 算法部分:
一.分治
对问题分而治之，利用多处理器的优势。
二.递归recursive
三.动态规划dp
四.贪心算法

五.深度有限搜索dfs
又称为 回溯法
六.广度有限搜索bfs

